---
layout: post
title: P,NP,NPC问题
categories: blog
tags:
- NP问题
- NP完全问题
---

算法的时间复杂度可以分为几类，一种是 O(1), O(n), O(n^2)等，这种复杂度下，n是复杂度表达式里的底数；另一种，如O(a^n), O(n!)等，它的复杂度表达式是非多项式级的，所以在n规模比较大的时候算法效率是不能承受的。另外，不是所有的算法都能找到多项式级别的复杂度的。有些甚至不能找出解，被称为不可解问题，[停机问题](http://zh.wikipedia.org/wiki/%E5%81%9C%E6%9C%BA%E9%97%AE%E9%A2%98)就是一个不可解问题（数理逻辑中有提到过）。

## P问题和NP问题

P类问题的定义是，如果一个问题可以找到一个能在多项式的时间里解决它的算法，那么这个问题就属于P问题。

NP问题*不是*非P类问题。NP问题的定义是，可以在多项式时间内验证一个解的问题，或者可以在多项式时间内猜出一个解的问题。由定义可知想要求出NP问题的一个解很困难，但是想要验证解的正确性却相对容易。即NP问题至少可以在多项式时间内验证一个解的正确性。例如，验证一条路径是否是Hamilton回路可以在O(n)内完成，但是判断一个图中是否存在Hamilton回路的话，就要验证所有的路径，这就不是多项式时间内的了。

定义NP问题的意义是用来划分出可以在多项式时间内解决的算法，如果一个问题在多项式时间内都无法验证其解的正确性，那也不可能在多项式时间内求出一个解了。

根据P问题和NP问题的定义可知，所有的P类问题都是NP问题，因为所有的P问题的解都可以在多项式时间内解决，验证其解的正确性也一定可以在多项式时间内完成，因为最坏情况可以把解都求出来再一一比较。

所谓的“NP问题”是在讨论是否P=NP，也即P问题是包含于NP问题范围内的，那是否所有的NP问题也都是P问题呢？（只不过有些NP问题尚未找到合适的多项式时间内的解决方法）

## NP完全问题

NPC问题，即NP完全问题。

### 约化

约化的定义是，一个问题A可以约化为问题B的含义是，解决问题B的解法可以解决问题A，或者A问题可以“变成”问题B。例如，求解一元一次方程的问题可以约化为求解一元二次方程的问题。

约化的标准定义：如果能找到这样一个变化法则，对任意一个程序A的输入，都能按这个法则变换成程序B的输入，使两程序的输出相同，那么我们说，问题A可约化为问题B。

“问题A可以约化为问题B”的另一意义在于：问题B的复杂度一定高于或等于问题A。所以从这个角度来看，约化是一个具有传递性的操作。

可约化也是指该变化规则可以*在多项式时间内实现*，约化过程也只有在多项式时间内才有意义。

### NPC问题

那么接下来可以定义NPC问题了：存在一类NP问题，使得所有的NP问题都可以约化为它，这一类问题被称为NP完全问题，即NPC问题。

NPC问题的充分条件：

1. 是NP问题；
2. 所有NP问题都可以约化为它。

而证明的过程一般是，先证明该问题是NP问题，再证明某个已知的NPC问题可以约化为它。

逻辑电路问题是一个具体的NPC问题。[逻辑电路问题](http://en.wikipedia.org/wiki/Boolean_satisfiability_problem)：给定一个逻辑电路，问是否存在一种输入使输出为真。在证明某个问题是否是NPC问题的时候就可以尝试将逻辑电路问题约化为该问题。

### NPC-Hard问题

NP-Hard问题，只满足NPC问题的第二个条件但是不一定要满足第一个条件。也就是说NP-Hard问题要比NPC问题的范围更大。

## 引申

伪多项式时间：一个算法的时间复杂度是输入数据的多项式表达，但却是输入数据长度的指数时间表达，例如背包问题。可参考[这里](http://en.wikipedia.org/wiki/Pseudo-polynomial_time)。

## 参考文献

1. [什么是P问题、NP问题和NPC问题](http://www.matrix67.com/blog/archives/105)
